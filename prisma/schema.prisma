// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo de Usuario
model Usuario {
  id        String   @id @default(cuid())
  nombre    String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  habitos Habito[]

  @@map("usuarios")
}

// Modelo de Hábito
model Habito {
  id          String   @id @default(cuid())
  nombre      String
  descripcion String?
  frecuencia  String   @default("diario") // "diario", "semanal", etc.
  color       String?
  icono       String?
  objetivo    Int      @default(30) // Meta de días
  activo      Boolean  @default(true)
  usuarioId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  usuario   Usuario    @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  registros Registro[]

  @@index([usuarioId])
  @@map("habitos")
}

// Modelo de Registro diario
model Registro {
  id         String   @id @default(cuid())
  fecha      DateTime @db.Date // Solo fecha, sin hora
  completado Boolean  @default(false)
  notas      String?
  habitoId   String
  createdAt  DateTime @default(now())

  habito Habito @relation(fields: [habitoId], references: [id], onDelete: Cascade)

  @@unique([habitoId, fecha]) // Un registro por hábito por día
  @@index([habitoId])
  @@index([fecha])
  @@map("registros")
}